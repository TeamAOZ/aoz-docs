# Let's see an Actor
The Actor instruction has many parameters that themselves have many properties or values. But don't worry, you can just define what's useful to you. In fact most settings have default values that allow you to change only the settings that interest you.

Here we go then! Type the following code, having cleared all other lines of the program that may already be on screen:
```javascript showLineNumbers
Locate 10,12 : Print "Bonjour"
Actor "magician", Image$="magic.png"
```
Now execute this program by clicking on the **RUN** button <img valign="middle" src="https://doc.aoz.studio/assets/images/en/image046.png" width="32px" /> to display the Â«magic.pngÂ» image :
<p align="middle"><img src="https://doc.aoz.studio/assets/images/en/image016.png" /></p>

You have created an actor, his name is "Magician", and his image is called Â«magic.pngÂ»: and he's alive. It's as simple as that!

Now add two parameters called X and Y to your code, like this:
```javascript showLineNumbers
Actor "magician", Image$="magic.png", X=400, Y=40
```
<p align="middle"><img src="https://doc.aoz.studio/assets/images/en/image017.png" /></p>
Let's take a closer look at the  different parameters used in this example: <b>Name of the actor</b>

The name of the actor, which is "magician" in this example, is the first  parameter and you have  to specify it. Most of the other parameters for the Actor instruction are optional. You can give this parameter a name or a number, for example:
```javascript showLineNumbers
Actor 10, Image$="magic.png", X=400, Y=40
```
We will see later that it can be convenient to use numbers for moving several actors at the same time.  You are free to choose names or numbers, but avoid using spaces and characters with accent marks. By the way, if a name is already used by another actor, then it is the other actor that will be affected by your settings.

**Image$ = "name of the image"**
The Image defines the appearance or the "suit" that the actor will wear. It is literally their image.

As usual, after the image is set in the Actor instruction, then that defined image will be used for this actor. And if no image is set then the Actor instruction won't show anything.

We will see that many image formats can be used like PNG, BMP and JPEG. The extension is optional you may well type Image$="magic"

**X -  horizontal position, Y - vertical  position**
These two parameters define the position to display the actor on the screen. The value of X and Y are in pixels (the smallest point displayed on the screen). In our example the image appears in position 400 (horizontal), 40 (vertical) from the top left corner of the screen.

Remember, these parameters are optional, just like the others, and if they are not defined then the last X and/or Y positions are used. For example, say you have placed an actor at 50, 50 previously in your program. If you do not assign values to X and Y in a new **Actor** instruction, then the start position it will be displayed at is 50,50.

Note: by default if X and Y are not set, the position of the actor will be 0,0. Yes I know itâ€™s logic.

**AOZ adapts to your logic**
AOZ lets you choose the order you use for your magic potion.
If you prefer:
```javascript showLineNumbers
Actor 10, X=400, Y=40, Image$="magic.png"
```
Rather than:
```javascript showLineNumbers
Actor 10, Image$="magic.png", X=400, Y=40
```
The magic will still work!

## Moving the actor

Now that we know how to display an actor, letâ€™s change our code to move it across the screen.
We're going to change our program and add a new parameter, called **EndX** like this:
```javascript showLineNumbers
Actor "magician", X=0, Y=0, Image$="magic.png", EndX=1980
```
<table>
	<tr>
		<td width="50%">
			Run the program by clicking on <b>RUN</b> (or hit the F2 function key), and your actor will move from left to right of the screen.
		</td>
		<td>
			<img src="https://doc.aoz.studio/assets/images/en/image018.png" />
		</td>
	</tr>
</table>
Note: to achieve the same thing in most other languages,  it can take a lot more lines of code, 20 to  100 lines. Each language has its characteristics, strengths and weaknesses, AOZ  has been designed  to offer powerful programming simplicity.
Let's break down our program. We've set the new <b>EndX</b>  parameter to 1980. <b>EndX</b> tells our actor that it must move from its current position to an end position defined by <b>EndX</b>. When this position is reached, the actor's movement stops.

Remember: you can put your parameters in any order you want, so you can also write:
```javascript showLineNumbers
Actor "magician", Image$="magic.png", X=0, EndX=1980, Y=0
```
To sum up: the starting point and end point of the movement is automatically taken care of by the **Actor** instruction, and it starts immediately. In this case moving from X=0, Y=0 until the X position is equal to the value defined by the **EndX** parameter, which is 1980.

We'll look at the **Duration** parameter that changes the speed of movement very soon.

**It's your move** ðŸ˜Š

- Stop the actor in the middle of the screen.
- Move the actor vertically using the same principle as the code above.
- Move the actor from the right of the screen to the left.  
- Move the actor diagonally.
- Use the image name <b>lucie.png</b>.
---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" />
</p>

<!--stackedit_data:
eyJoaXN0b3J5IjpbLTE0NTY1MTE2NzMsLTU0NTU3MjAzNF19
-->