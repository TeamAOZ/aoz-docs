# MOVE THE ACTOR WITH THE JOYSTICK
We saw how simple it was to use the default keys or to assign keyboard keys to manipulate our actor. Now let's see how complicated it is with the joystick.

As always with AOZ you can make it simple with the default settings and then progress by going into details.
The simple version of the move with the Joystick is:

```javascript showLineNumbers
Actor "magician", Image$="magic.png", Control$="Joystick"
```
<table>
	<tr>
		<td width="70%">
			Connect a joystick or gamepad to your computer, execute the program, and there you are, moving your actor. Great or what?
		</td>
		<td>
			<img src="https://doc.aoz.studio/assets/images/image020.png" />
		</td>
	</tr>
</table>

And the more controlled version:
```javascript showLineNumbers
Actor "magician", Image$="magic.png", Control$= "JoyRight0: offsetX = 10; JoyLeft0: offsetX = -10"
```

Here the Actor's  **Control$** parameter has been set so the speed on the X axis is +10 going to the right, and -10 going to the left.

- **Control$="JoystickN"** (note the N) is the syntax because we number our joysticks **N**, as you can have several Joysticks connected to your PC or device:
- **Joystick  ( or  Joystick0):** For all directions of the 1st joystick.
- **JoystickN:** for the second, third,â€¦ joystick connected.
- **JoyLeftN:**  Left direction.
- **JoyRightN:**  Right direction.
- **JoyUpN:**  Up direction.
- **JoyDownN:**  Down direction. We're not sure why we're telling you this, it's so obvious!
- **JoyButtonN**  **(** button number **)**: is the number of the joystick action button.  This is needed because there are Joysticks, Gamepads, Controllers for flight simulators that have a lot of buttons, so each needs a number.

Note:  **Joystick, Joystick0**  or  **JoyLeft0** uses the first joystick connected (well, we know the numbering starts at 0 and not 1, it's an old habit).

**It's your move** ðŸ˜Š  
- Change the speed from 10 to 6
- Add the JoyUp0 properties: JoyUp0: offsetY = -6; JoyDown0: offsetY = 6 to move the actor in all four directions
- double the speed of your actor's movements
- Reverse directions

As previously mentioned we will see in the chapter even more possibilities to manipulate your actors, including how to manage collisions between several actors, and animations.

---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/image001.png" />
</p>

<!--stackedit_data:
eyJoaXN0b3J5IjpbLTg2NjU0OTU1Nl19
-->