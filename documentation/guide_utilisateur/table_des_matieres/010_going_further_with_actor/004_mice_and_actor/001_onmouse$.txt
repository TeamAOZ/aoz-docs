# OnMouse$
For that, we are going to use the **OnMouse&dollar;** parameter of the Actor instruction, it will save you a lot of time!

Let's see a simple example:
```basic
1  Actor "magic", X=100, Y=100, Image$="magic.png", OnMouse$="CLICK"
2  Do
3    Wait key
4  Loop
5
6  Procedure CLICK[EVENT$]
7    If EVENT$="mouseclick" Then Print "Click!"
8  End Proc
```
Our first line shows the Actor "magic" at the coordinates 100,100. The **OnMouse&dollar;** parameter indicates the name of the AOZ procedure to be called for each mouse action on this Actor. The AOZ procedure that will be called here is **CLICK**.

This procedure, as we will see, can retrieve a certain amount of information. In this example the **CLICK** procedure retrieves the **EVENT&dollar;** information, which contains the type of action produced by the mouse on the Actor.

The content of our procedure displays the word "Click!", if the value of **EVENT$** is "mouseclick" (corresponding to a mouse click).

**EVENT$** can take the following values:
- "**mouseclick**": when the user clicks on the Actor
- "**mousedown**": when the user keeps a mouse button pressed
- "**mouseup**": when the user releases a mouse button
- "**mousemove**": when the user hovers the mouse pointer over the Actor
- "**dragdrop**": when the user moves the Actor using the mouse

Now let's modify our **CLICK** procedure as follows:
```basic
6  Procedure CLICK[EVENT$, BUTTON, INDEX$, X, Y]
7    Locate 1,1: Print "  Actor:"+INDEX$ + "  EVENT$:"+EVENT$ + "  BUTTON:"+Str$(BUTTON) + "X:"+Str$(X) + "Y:"+Str$(Y)
8  End Proc
```
When you operate "magic" with the mouse, information is displayed at the top of the screen.
The **CLICK** procedure offers several properties:
- **BUTTON**: is an integer corresponding to the mouse button that is pressed:
	- 0: No button pressed
	- 1: The left button
	- 2: The right button
	- 4: The central button or wheel (if there is one)

- **INDEX$**: returns the name of the Actor concerned by the mouse action. If you also want to capture Actors identified by a number, you can use **INDEX**.
- **X** and **Y**: return the position of the mouse relative to the interior of our Actor.
---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/image001.png" />
</p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbMTUyMTcwNzc5Myw4NzAyMzIwMjYsNzMwOT
k4MTE2XX0=
-->