# The Listener and Event System

## OnCollision$

If the actor collides with another actor, then this Listener calls the defined AOZ procedure by passing it the following properties if required:
 - **EVENT$:** Event name (always "**on_collision**").  
 - **INDEX1:** Value of the monitored actor index.
 - **INDEX1$:** The name of the supervised actor.
 - **INDEX2:** Value of the collided actor index.
 - **INDEX2$:** The name of the actor we collided with.
 - **GROUP1$** : Name of the group of actors supervised.
 - **GROUP2$** : Name of the group that was collided with.
 - **IMAGE:** Value of the image's index of the collided actor.
 - **IMAGE$:** The name of image of the collided actor.
<BR>

## OnControl$

Returns the values of the **Control$ ** activated for the actor. Example: if **Control$="keyboard"** this will give the values related to the keyboard. "mouse" for the mouse, ...
 - **EVENT$:** Event name (always "**on_control**").
 - **CONTROL$:** Name of the instruction of this event.
 - **INDEX:** Value of the monitored actor index.
 - **INDEX$:** Name corresponding to the monitored actor.
 - **BUTTON:** Index of the mouse button that was activated.
    - 0: No button pressed
	- 1: The left button
	- 2: The right button
	- 4: The central button or wheel (if there is one)
 - **ALTKEY:** Returns True or False if the Alt key has been pressed or not.
 - **CTRLKEY:** Returns True or False if the Ctrl key has been pressed or not.
 - **SHIFTKEY:** Returns True or False if the Shift key has been pressed or not.
 - **METAKEY:** Returns True or False if the "Windows" or "CMD" (Mac) button has been pressed or not.
 - **MOUSEX:** Numerical value corresponding to the horizontal position of the mouse.
 - **MOUSEY:** Numerical value corresponding to the vertical position of the mouse.

<BR>

## OnLimit$

Moving an actor can be limited to a rectangular area of the screen, for example to prevent it from falling off the screen.
When this area is delineated, the procedure defined is called when the actor hits one of the edges of the area, passing it the following properties:
 - **EVENT$:** Event name (always "**on_limit**").
 - **INDEX:** Value of the monitored actor index.
 - **INDEX$:** Name corresponding to the monitored actor.
 - **LIMIT$:** The name of the edge reached ("left", "right", â€œtop", "bottom").  **leftlimit:**  X coordinate**.**
 - **rightlimit:** X coordinate**.**
 - **toplimit:**  Y coordinate**.**
 - **bottomlimit:** Y coordinate**.**
<BR>

## OnAnimChange$

When the actor is animated (when the **Spritesheet$** setting has been entered), **OnAnimChange$** calls the defined AOZ procedure by passing it the following properties:
 - **EVENT$:** Event name, "change" or  "complete." If the name is  "complete," it's because the animation is over.
 - **INDEX:** Value of the monitored actor index.
 - **INDEX$:** Name corresponding to the monitored actor.
 - **ANIM$:** The name of the current animation.
 - **FRAME:** The image number currently being played for the current animation.
 - **TOTALFRAMES:** The total number of images for the current animation.
<BR>

## OnChange$

This listener calls the AOZ procedure defined each time the actor undergoes a change in position, transparency, size or rotation, passing the following properties:

 - **EVENT$:** Event name: "change" or  "complete".  If the name is  "complete",  it's because the actor's move is complete.
 - **INDEX:** Value of the monitored actor index.
 - **INDEX$:** Name corresponding to the monitored actor.
 - **X:** Position X of the actor.
 - **Y:** Position Y of the actor.
 - **ALPHA:** Actor's opacity.
 - **SCALEX:** Horizontal expansion/reduction rate.
 - **SCALEY:** Vertical expansion/reduction rate.
 - **ANGLE:** Actor rotation angle.
 - **HREV:** True if the actor is flipped horizontally, False if not.
 - **VREV:** True if the actor is flipped vertically, False if not.
 - **SKEWX:** Horizontal distortion of the actor.
 - **SKEWY:** Vertical distortion of the actor.

Of course you don't have to listen out for every actor. You are free to monitor only those you reckon are important to watch.

## OnMouse$
This listener calls the AOZ procedure defined each time the mouse is used with an actor click, mouse over..., passing the following values to: 

 - **EVENT$** properties:
 -- **mouseclick**": when the user clicks on the Actor
 -- **mousedown**": when the user keeps a mouse button pressed
 -- **mouseup**": when the user releases a mouse button
 -- **mousemove**": when the user hovers the mouse pointer over the Actor
 -- **dragdrop**": when the user moves the Actor using the mouse
 - **BUTTON:** Index of the mouse button that was activated.
 - **INDEX:** Value of the monitored actor index.
 - **INDEX$:** Name corresponding to the monitored actor.
 - **X:** Position X of the actor.
 - **Y:** Position Y of the actor.

<BR>
Let's see a simple example with **OnMouse&dollar;**:

```basic
Actor "magic", X=100, Y=100, Image$="magic.png", OnMouse$="CLICK"
Do
  Refresh
Loop

Procedure CLICK [EVENT$, BUTTON, INDEX$, X, Y]
  Locate 1,1: Print "  Actor:"+INDEX$ + "  EVENT$:"+EVENT$ + "  BUTTON:"+Str$(BUTTON) + "X:"+Str$(X) + "Y:"+Str$(Y)
End Proc
```
Our first line shows the Actor "magic" at the coordinates 100,100. The **OnMouse&dollar;** parameter indicates the name of the AOZ procedure to be called for each mouse action on this Actor. The AOZ procedure that will be called here is **CLICK**.

This procedure, as we will see, can retrieve a certain amount of information. In this example the **CLICK** procedure retrieves the **EVENT&dollar;** information, which contains the type of action produced by the mouse on the Actor.

- **EVENT$**: is "mouseclick" here.
- **BUTTON**: is an integer corresponding to the mouse button that is pressed:
	- 0: No button pressed
	- 1: The left button
	- 2: The right button
	- 4: The central button or wheel (if there is one)
- **INDEX$**: returns the name of the Actor concerned by the mouse action. If you also want to capture Actors identified by a number, you can use **INDEX**.
- **X** and **Y**: return the position of the mouse relative to the interior of our Actor.
<BR>
---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" />
</p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbNTQ2NDI1Mjk4LC04MTMyMDIzMjMsMTUyOD
I0Mjk3NSwtODc2Mjc1NjE2LC0xMzA0MDU0OTI1LC01OTgzMTkx
MSwxNTIxNzA3NzkzLDg3MDIzMjAyNiw3MzA5OTgxMTZdfQ==
-->