# Account Authenticate
<!--
@name: Account Authenticate
@description:
@tags:
@categories:
\-->

Runs the AOZ account authentication process.

## Description

`Account Authenticate Mandatory, Synchronous, Left, Top, UseToken, OnDone$, OnSuccess$, OnError$, OnClose$, VisualAspect$`

The first time this is called, an authentication form is displayed for the user to register or login a free AOZ account. \
If the authentication process succeeds, an authentication token is saved into your local storage memory. \
The next time this is called, the authentication token will be used for automatic authentication : nothing will be asked to the user. \
You can force the authentication form to display even if a valid token exists using the `UseToken=FALSE` parameter. \
You can set the coordinates where the popup will be displayed using `Left=10`, `Top=50` parameters. \
By default, the program waits until the user is authenticated before continuing its execution. You can use a call to `Account Authentication Asynchronous` or `Account Authentication Synchronous FALSE` before to allow your program to continue its execution. \
The `Mandatory` parameter allow you to remove the "abort" button, to force the user to authenticate. \

## Parameters

- `Mandatory=TRUE`: allows you to indicate that the user's login is mandatory, and that the user will not be able to close the login window until he/she has successfully logged in to his/her AOZ account.
  If you do not set this option, the user will always be able to close the window without logging in, so you will have to check in your AOZ program if he has logged in with the `Account Authenticated` function to act accordingly.
- `Synchronous=FALSE`: allows the AOZ program to continue running after displaying the login window, in "asynchronous" mode. You will then need to check the login status of the user of your AOZ program with the `Account Authenticating` and `Account Authenticated` functions.
- `Left`: Allows you to define a horizontal coordinate where to display the login popup window. If not specified, it will be displayed at the leftmost position.
- `Top`: allows you to set a vertical coordinate where to display the login popup. If not specified, it will be displayed at the top.
- `UseToken=FALSE`: allows you to force the authentication window to be displayed, even if the user had checked "Remember me", ignoring the identification token that was saved.
- `OnDone$`: the name of a procedure that will be executed when the authentication process ends (when the user is logged in or the window has been closed).
- `OnSuccess$`: the name of a procedure that will be executed on successful login.
- `OnError$`: the name of a procedure that will be executed in case of an error. All error messages that are displayed to the user, or connection errors, are sent this way.
- `OnClose$`: the name of a procedure that will be executed if the user closes the login popup without logging in.
- `VisualAspect$`: you can choose the visual appearance of the login popup. Are allowed here: `aoz`, `flat`, `modern`, `pictos`, `yellow`.

## Examples

A synchronous authentication process:
```basic
Account Authenticate
Print "Done."
```

An asynchronous authentication process:
```basic
Account Authentication Asynchronous
Account Authenticate
While Account Authenticating()
	Print "Waiting..."
	Wait 1
Wend
Print "Done."
```

Authenticate without taking care of the token, with mandatory authentication before you can continue... \
with all options:
```basic
Account Authenticate Mandatory = TRUE, Left = 50, Top = 50, UseToken = FALSE
Print "Done."
```

## Notes

This instruction is automatically called by features that need your application user to be connected to his AOZ account.

List of features:

- `DB` instructions that access a remote database will call `AOZ Authenticate Mandatory=TRUE`.

## See Also

- `DB Read`
- `DB Search`
- `DB Sql`
- `DB Write`
- `UI Visual Aspect`

---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" /></p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTYyODY1ODI0NywtMTYxMDUxNzgzOSwxOT
QyNTkwMjM4LDcyODU2Njk4MV19
-->
