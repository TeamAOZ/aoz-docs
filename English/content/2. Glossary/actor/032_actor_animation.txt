# Actor Animation
<!--
@name: Actor Animation
@description: 
@tags: 
@categories: 
\-->
Create an animation sequence to be played by an Actor.

## Syntax
> **Actor Animation** anim_index, `Anim$` = "anim_name", `Sequence$` = "images_list"

## Parameters
( italic ) = Optional
|**Parameter**|**Type**|**Description**|
|---|---|---|
|**`Index`**|index|Index of the Animation.|
|**`Anim$`**|string|Name of the Animation. This name will be used by the `Anim$` property of the `Actor` instruction.|
|**`Sequence$`**|string|Images organisation|
|_`LoopMove`_|boolean|If True, the animation will be played in loop, from the starting|
|_`ReverseMove`_|boolean|If True, the animation will be played in loop, with a "ping-pong" effect|

## Notes
**How to define a Sequence?**
The `Sequence$` property is a string containing the names or numbers of the images you want to use for the animation.
For example :
```basic
Actor Animation 1, Anim$ = "run", Sequence$="1,2,3"
```
will play the images "1", "2" and "3" one after the other. The animation will stop at the last image ("3")

It is possible to add a directive at the end of the sequence that will indicate what it should do when it reaches the last frame.
For example :
```basic
Actor Animation 1, Anim$ = "run", Sequence$="1,2,3,L"
```
The letter "L" at the end of the sequence forces the animation to play in a loop. If you use "R", the animation will be play with a "ping-pong" effect.

Note: "L" will have the same effect as the LoopMove property, if the latter is set to True. "R" will have the same effect as the ReverseMove property, if the latter is set to True.

 A pause is possible between each image, the value is in milliseconds (with 100 as default value)
 Examples:
```basic
Actor Animation "walk", "1:1000,2,3,4:200..."
```

Note: You need to have your `Actor Animation` instruction before using it with the corresponding `Actor`, otherwise it will not find the animation to run. See below example.

*Example of a small game using animations:*
You will find all the images needed below in the AOZ Studio Drive, located here: \aoz-editor\AOZ_Studio\app\Drives\AOZ Drive\resources\images\Platformer_MagicBird\...

```basic
// Backgrounds
Actor "forest", Image$="forest", StartX=0, EndX=-1920, Duration=20000, LoopMove=True
Actor "ground", Image$="ground",Y=880, StartX=0, EndX=-1920, Duration=5000, LoopMove=True


// All Actors Animations defined first
Actor Animation "run", "lucie_run_right-0, lucie_run_right-1, lucie_run_right-2, lucie_run_right-3, lucie_run_right-4, lucie_run_right-5", LoopMove = True
Actor Animation "mechawalk", "magictoy_walk-0, magictoy_walk-1, magictoy_walk-2, magictoy_walk-3, magictoy_walk-4, magictoy_walk-5, L"
Actor Animation "roll","tagada_walk-0,tagada_walk-1,tagada_walk-2", LoopMove = True
Actor Animation "star", "collectible-0, collectible-1, collectible-2, collectible-3, L"


// Play Lucie the hero
Actor "lucie", X=320, Y=636, Anim$="run", Behavior$="jump"

// Play the Mecha Monster 1
Actor "monster1", StartX=1920, EndX=-1920, Y=784, Duration=8000, Group$="badguy",Anim$="mechawalk",LoopMove=True
// Play the Mecha Monster 2
Actor "monster2", StartX=2880, EndX=-1920, Y=784, Duration=10000, Group$="badguy",Anim$="mechawalk",LoopMove=True
// Play the Rolling Monster
Actor "monster3", StartX=3360, EndX=-480, Y=740, Duration=9000, Group$="badguy", Anim$="roll",LoopMove=True
// Play the Star
Actor "star", StartX=4440, EndX=-2840, Y=500, Duration=9000, Anim$="star",LoopMove=True

Do
  If Actor Col( "lucie", Group$="badguy" ) = True Then Boom : End // was a collision between lucie and one of the backguy (the 3 monsters)
  Refresh
Loop
```
---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" /></p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTMyMDMxMTUwMSwtOTE2MDYwMDI4LDExNj
EwNTQ3MiwtNzA5MDUxNzE1LC05MTUzMDcyMiw1MTk1NjYyNzRd
fQ==
-->