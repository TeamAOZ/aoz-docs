# THE HOTSPOTS
To make animations you have to understand the principle of the hotspot (and Sprites sheets that will be seen later in the Animation chapter).

The hotspot or "anchor point" is an invisible point, like a center of gravity that each actor's image has. The hotspot serves to:

- Position the actor precisely on the screen in X and Y
- Hold the actor's rotation center
- Center a zoom on the actor

By default, the Hot Spot is positioned at the top and left of each actor.
<table>
	<tr>
		<td width="33%">
			<img src="https://doc.aoz.studio/assets/images/en/image024.png" />
		</td>
		<td width="34%">
As it is located at this point, the rotational movement of our actor is around it =>	
		</td>
		<td width="33%">
			<img src="https://doc.aoz.studio/assets/images/en/image024a.png" />
	</td>
	</tr>
</table>

So to get the expected result of rotation in our program we need to have the hotspot of our actor at the center of it.

Nothing simpler in AOZ, and we will use a new instruction that will allow us to move this point to the right place. And this instruction, you'll never have guessed, is called Hotspot.

Let's change the line of our code like this:
```javascript showLineNumbers
Actor "ship", X=Screen Width/2, Y=Screen Height/2, Image$="ship.png", LookAt$="Mouse", Hotspot$="middle"
```
Run the program, and see how the display problem is solved.

Your actor is perfectly centered, and orients itself from its center. This is due to the **Hotspot** setting you added. This setting defines the location of the actor's hotspot in the image. Here, giving it the value **middle** this indicates that you have to take the center.

The following diagram determines the values of the Hotspot:
<table>
	<tr>
		<td width="50%">
			<img src="https://doc.aoz.studio/assets/images/en/image027.png" />
		</td>
		<td width="50%">
The hotspot is set from the top-left corner of the image. We see that the central point of the image is defined by the value <b>middle</b>. When displayed by the Actor instruction, the hotspot’s gap is added automatically by AOZ to the coordinates X, Y, which is very nice because you have nothing to do. I like it.
	</td>
	</tr>
</table>
Note: It is perfectly legal to position the Hotspot outside the current display of the screen. This can be used, for example, in a game where Sprites disappear and reappear off the edge of the screen.

Remember that the Hotspot is an anchor, i.e. the X and Y positions are the position of your actor’s Hotspot. For example, if you change your line of code by putting X=0 and Y=0:  
```javascript showLineNumbers
Actor "ship", X=0, Y=0, Image$="ship.png", LookAt$="Mouse", Hotspot$="middle"
```
You will see that your actor will be partially hidden by the edge of the screen because the point displayed at 0,0 is actually the center of the Sprite not the top left corner.

To find the position of the original hotspot, simply set the Hotspot value to **"top-left"**.

The Hot Spot may not be the primary topic of this paragraph, but it's important to understand it.

So now let's go back to **LookAt$**.

The **LookAt$** instruction tells the actor that it needs to look in a specific direction. Earlier, we asked the actor to follow the mouse pointer by defining the **property** = "Mouse".

Let's look at the different **properties** that can be given to  **LookAt$:**
- **Mouse:** As we have just seen, the actor follows the mouse pointer.
- **N:** The actor looks at the other actor (good for actors in love). N is the number or name of the actor to look at.
- **X,Y:** The actor looks at a fixed point on the screen. If the actor moves, it will always follow this point. X and Y are the coordinates of the point to look at.

Examples:
- LookAt$="Mouse"
- LookAt$="MyLove"
- LookAt$="100,350"

---
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" />
</p>


<!--stackedit_data:
eyJoaXN0b3J5IjpbLTI1MjI0MzMxMCwtMjQ4OTQ0MjEyLC0xNz
A2NDk3NTAyLDE3ODYxNTYzMTVdfQ==
-->