
# Triangle
<!--
@name: Bar
@description: 
@tags: 
@categories: 
\-->

**Instruction** - Draw a triangle defined by the coordinates of it\|;s three corners

<div class="compatibility"><span>Compatibility </span><img src="https://doc.aoz.studio/assets/images/common/compatibility/aoz_logo.png" valign="center" alt="AOZ" title="AOZ" />




## Syntax 

**Triangle** *x1, y1, x2, y2, x3, y3*
**Triangle** *x1, y1, x2, y2, x3, y3, rotation*
**Triangle** *x1, y1, x2, y2, x3, y3, rotation, fill*

## Parameters


- **x1**: The horizontal coordinate of the first corner of the triangle
- **y1**: The vertical coordinate of the first corner of the triangle
- **x2**: The horizontal coordinate of the second corner of the triangle
- **y2**: The vertical coordinate of the second corner of the triangle
- **x3**: The horizontal coordinate of the third corner of the triangle
- **y3**: The vertical coordinate of the third corner of the triangle
- **rotation**: Optional. The angle of rotation of the triangle
- **fill**: Optional. Fill the triangle using the current fill settings

## Description

Draw a triangle using the current ink, fill and border settings in the current screen, that can be rotated around it|;s automatically calculated centre point if required using the optional _**rotation**_ parameter.

## Example Code

The following code draws randomly sized and coloured triangles.
```basic
line width 12					// set line width to 12
line join "round"				// set line join to round the corners
ink 1							// set the ink colour
draw shadow 20,20,30,$000000ff	// Create a shadow effect
for f=1 to 200 					// Loop to define 200 triangles
	colour 1, rgb(rnd(80 to 255),rnd(80 to 255),rnd(80 to 255)) // change the ink colour to a random RGB value
	cx=rnd(300 to 1620)			// Define a random centre point cx,cy
	cy=rnd(300 to 780)
	// Draw triangles,with point coordinates within 300 pixels of the centre position.
	// This stops the triangle being too big
	Triangle cx+(rnd(-300 to 300)),cy+(rnd(-300 to 300)),cx+(rnd(-300 to 300)),cy+(rnd(-300 to 300)),cx+(rnd(-300 to 300)),cy+(rnd(-300 to 300))
	wait 0.2					// wait for 0.2 seconds
next f							// repeat loop
```
---


This example program fills the screen with randomly sized and coloured, semi-transparent, rotating triangles.
 
```basic
// >>Shards<<
//
// Demonstration of the New Triangle instruction and Shade function 
// By Dave Baldwin
// 22/01/2023

#speed:"graphics"
dim tc(200,3,2) 	// Define triangle coordinate array, 200 triangles, 3 vertices, 2 coords x,y
line width 2		// Set the line width
line join "round" 	// Soften the points
border on			// Switch on borders
border ink 1		// Set border colour to palette colour 1
r#=0				// Rotation variable
// Set up the triangle array

for f=1 to 200 					// Loop to define 200 triangles
	cx=rnd(10 to 1900)			// Define a random centre point cx,cy
	cy=rnd(10 to 1060)
	for n=1 to 3					// Define 3 vertices for the triangle
		tc(f,n,1)=cx+(rnd(-400 to 400))	// Def a random x coordinate around cx - This stops the triangles getting too big!
		tc(f,n,2)=cy+(rnd(-400 to 400)) // Def a random y coordinate around cy
	next n							// Repeat until all 3 are done
next f							// Repeat until all 200 are done

// Main Loop to draw and animate the 200 triangles defined in the array

do							// Start a loop
	randomize 0					// Set the random number seed so all random number follow the same pattern on each execution of the loop
	add r#,0.3,0 to 360			// Increase the rotation variable by 0.5 degrees
	for f=1 to 200				// Loop to draw the 200 triangles
		rm=rnd(-3 to 3)				// Define rotation multiplier for direction and speed
		i= rnd(3 to 62)				// Choose a random Ink colour from the palette
		set alpha i,rnd(5 to 9)/10	// Set a random transparency for that colour from 0.6 to 1.0
		ink i						// Set the Ink colour
		colour 1, Shade ( i,200 )	// change palette colour 1 to 200% of palette colour i
		if rm=0 then rm=4			// Prevent static triangles
		Triangle tc(f,1,1),tc(f,1,2),tc(f,2,1),tc(f,2,2),tc(f,3,1),tc(f,3,2),r#*rm,1  // Draw the triangle using the values from the array and the rotation variable
	next f						// Repeat until all 200 are done
	refresh						// Update the display
	cls							// Clear the screen ready for next time
loop						// repeat the loop

```

<p align="center"><img src="https://doc.aoz.studio/repository/assets/images/shards.png" /></p>
<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" /></p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTEwNDc4NjE1NzZdfQ==
-->