# DB Search Sql
<!--
@name: DB Search Sql
@description: 
@tags: 
@categories: 
\-->

Search records into the current table that match the SQL search expression.

## Description

`DB Search Sql Search$`

When you store multiple records in a table, this allows you to search some of them. \
This is similar to `DB Search`, but allow you to make more uses of the SQL syntax: any clause that is allowed after the WHERE keyword of an SQL query is allowed.

## Parameters

- `Search$`: The search expression.

## Example

You have an address book application filled with data (see `DB Write`): let's find someone's coordinates, knowing its name and two possible cities:
```basic
Q = Chr$(34)
DB Search Sql "Name$=" + Q + "Baptiste" + Q + " AND (City$=" + Q + "Rennes" + Q + " OR City$=" + Q + "Paris" + Q + ")"
DB Read "Name$, Phone_Number$, Email_Address$"
Print "Name:", Name$
Print "Phone number:", Phone_Number$
Print "Email address:", Email_Address$
```

## Notes

Notice that writing pure-SQL queries may be complicated when you need to access `Variable#` float numbers or use double-quotes into your query, like into the previous example. \
You should consider using `DB Search` calls, simpler to write and read, when it is possible.

There are several instructions for doing research that you can choose from depending on how difficult the design of the code is and how readable it is:

- `DB Search` and `DB Search All` are the easiest to write a search, and the most readable.
- `DB Search Sql` allows you to enter only the search criteria in SQL, it remains simpler than doing the SQL query entirely by hand. This statement introduces a little more SQL, and lowers the readability of the code.
- `DB Sql`  is pure SQL, it allows you to do more than the other 2, we are full-SQL here, so itâ€™s even less easy to write and possibly to read.


## See Also

- `DB First`
- `DB Last`
- `DB Next`
- `DB Pointer()`
- `DB Previous`
- `DB Read`

---

<p align="center"><img valign="middle" width="76px" src="https://doc.aoz.studio/assets/images/en/image001.png" /></p>
<!--stackedit_data:
eyJoaXN0b3J5IjpbNzA0MTgxMzgwLDQ5MDI2Njg4OCwxOTQyNT
kwMjM4LDcyODU2Njk4MV19
-->
